import{u as l,a as m,C as p,M as u,G as d,b as o,B as y}from"./chunk-BG7do94j.js";import{E as g}from"./chunk-CC8PhC7k.js";import"./chunk-C4bXDfxA.js";import{M as f}from"./chunk-17Fj8kIi.js";import{d as w,w as M,a as T,r as _}from"./chunk-CN5kXZIc.js";const E=w({__name:"TestLayer",props:{visible:{type:Boolean,default:!0},source:{type:Array,default:()=>[]}},setup(i){class n{constructor(e){this.clock=new p,this.radiansPerSecond=u.degToRad(30),this.group=new d,this.mesh=new o,this.layer=e.layer,this.graphic=e.graphic}setup(){const e=new y(1e3,1e3,1e3);this.mesh=new o(e,this.layer.material),this.group.add(this.mesh),this.layer.group.add(this.group);const a=this.layer.getRenderTransform().createTransformMatrix4(this.graphic.geometry);this.group.applyMatrix4(a)}animate(e){const a=this.clock.getDelta();this.mesh!==void 0&&(this.mesh.geometry.rotateY(this.radiansPerSecond*a),e.renderNode?.requestRender())}dispose(){this.layer.group.remove(this.group)}}class h extends f(g){init(){this.entities=this.source.map(e=>new n({layer:this,graphic:e}))}}const s=i,c=l(),t=new h;return t.source=s.source,M(()=>s.source,r=>{t.source=r,t.refresh()}),T(()=>{t.visible=s.visible}),m(c,t),(r,e)=>_(r.$slots,"default")}});export{E as _};
