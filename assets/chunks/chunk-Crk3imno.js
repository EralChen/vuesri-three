import{W as t,dg as x,e9 as f}from"./chunk-C4bXDfxA.js";import{y as r,e as g,u as d,s as p,k as P}from"./chunk-D_yTKJJf.js";const F=u=>{let e=class extends u{initialize(){this.exportImageParameters=new f({layer:this.layer})}destroy(){this.exportImageParameters=d(this.exportImageParameters)}get exportImageVersion(){return this.exportImageParameters?.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}async fetchPopupFeaturesAtLocation(n,y){const{layer:o}=this;if(!n)throw new p("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:o});const{popupEnabled:h}=o;if(!h)throw new p("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:h});const m=this.createFetchPopupFeaturesQuery(n);if(!m)return[];const{extent:a,width:s,height:i,x:c,y:l}=m;if(!(a&&s&&i))throw new p("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:a,width:s,height:i});const w=await o.fetchFeatureInfo(a,s,i,c,l);return P(y),w}};return t([r()],e.prototype,"exportImageParameters",void 0),t([r({readOnly:!0})],e.prototype,"exportImageVersion",null),t([r()],e.prototype,"layer",void 0),t([r(x)],e.prototype,"timeExtent",void 0),e=t([g("esri.layers.mixins.WMSLayerView")],e),e};export{F as m};
