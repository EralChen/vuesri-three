import{J as D,q as v}from"./chunk-D_yTKJJf.js";import{fz as d,bv as c,cm as y,fA as h,fB as $,fC as M,fD as g,fE as I}from"./chunk-JaFSy54E.js";import{u as w,c as m,i as O,f as S}from"./chunk-a6MOk3fR.js";import"./chunk-FKPdDv5g.js";import"./chunk-MoMX09Vv.js";class _{transform(t){const e=this._transform(t),a=[e.points.buffer,e.rgb.buffer];e.pointIdFilterMap!=null&&a.push(e.pointIdFilterMap.buffer);for(const r of e.attributes)"buffer"in r.values&&D(r.values.buffer)&&r.values.buffer!==e.rgb.buffer&&a.push(r.values.buffer);return Promise.resolve({result:e,transferList:a})}_transform(t){const e=w(t.schema,t.geometryBuffer);let a=e.length/3,r=null;const l=new Array,b=m(t.primaryAttributeData,e,a);t.primaryAttributeData!=null&&b&&l.push({attributeInfo:t.primaryAttributeData.attributeInfo,values:b});const o=m(t.modulationAttributeData,e,a);t.modulationAttributeData!=null&&o&&l.push({attributeInfo:t.modulationAttributeData.attributeInfo,values:o});let f=O(t.rendererInfo,b,o,a);if(t.filterInfo&&t.filterInfo.length>0&&t.filterAttributesData!=null){const s=t.filterAttributesData.filter(v).map(i=>{const u=m(i,e,a),p={attributeInfo:i.attributeInfo,values:u};return l.push(p),p});r=new Uint32Array(a),a=S(e,f,r,t.filterInfo,s)}for(const s of t.userAttributesData){const i=m(s,e,a);l.push({attributeInfo:s.attributeInfo,values:i})}3*a<f.length&&(f=new Uint8Array(f.buffer.slice(0,3*a))),this._applyElevationOffsetInPlace(e,a,t.elevationOffset);const n=this._transformCoordinates(e,a,d.fromData(t.obbData),c.fromJSON(t.inSR),c.fromJSON(t.outSR));return{obbData:t.obbData,points:n,rgb:f,attributes:l,pointIdFilterMap:r}}_transformCoordinates(t,e,a,r,l){if(!y(t,r,0,t,l,0,e))throw new Error("Can't reproject");const b=h(a.center),o=I(),f=I(),n=h(a.halfSize);$(A,a.quaternion);const s=new Float32Array(3*e);for(let i=0;i<e;i++){let u=3*i;o[0]=t[u]-b[0],o[1]=t[u+1]-b[1],o[2]=t[u+2]-b[2],M(f,o,A),n[0]=Math.max(n[0],Math.abs(f[0])),n[1]=Math.max(n[1],Math.abs(f[1])),n[2]=Math.max(n[2],Math.abs(f[2])),s[u++]=o[0],s[u++]=o[1],s[u]=o[2]}return a.halfSize=n,s}_applyElevationOffsetInPlace(t,e,a){if(a!==0)for(let r=0;r<e;r++)t[3*r+2]+=a}}const A=g();function J(){return new _}export{J as default};
