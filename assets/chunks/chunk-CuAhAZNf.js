import{aV as R,aW as U,aX as j,bb as V,aY as z,cf as W,cg as k,bv as g,bc as w,bB as A,ch as u,ci as X,cj as c,ck as I,cl as L,cm as $,cn as E,co as M,cp as S,cq as m,U as q,cr as N,cs as F,ct as G,W as d,cu as K,b2 as P,ad as O,cv as b}from"./chunk-C4bXDfxA.js";import{s as B,j as T,c as D,y as f,e as Y}from"./chunk-D_yTKJJf.js";import"./chunk--6mYOZ3I.js";let p=class extends R(U(j(V(z(W(k(O))))))){constructor(a){super(a),this.operationalLayerType="IntegratedMesh3DTilesLayer",this.spatialReference=new g({wkid:4326,vcsWkid:115700}),this.fullExtent=new w(-180,-90,180,90,this.spatialReference),this.url=null,this.type="integrated-mesh-3dtiles",this.path=null,this.minScale=0,this.maxScale=0}set elevationInfo(a){this._set("elevationInfo",a),this._validateElevationInfo()}_verifyArray(a,i){if(!Array.isArray(a)||a.length<i)return!1;for(const o of a)if(typeof o!="number")return!1;return!0}_initFullExtent(a){const i=a.root?.boundingVolume;if(!i)return;if(i.box){const t=i?.box;if(t[3]>7972671&&t[7]>7972671&&t[11]>7945940)return}const o=a.root?.transform,x=b();if(i.region&&this._verifyArray(i.region,6)){const t=i.region,l=A(t[0]),n=A(t[1]),s=t[4],r=A(t[2]),e=A(t[3]),y=t[5];this.fullExtent=new w({xmin:l,ymin:n,zmin:s,xmax:r,ymax:e,zmax:y,spatialReference:this.spatialReference})}else if(i.sphere&&this._verifyArray(i.sphere,4)){const t=i.sphere,l=u(t[0],t[1],t[2]),n=t[3]/Math.sqrt(3),s=b();X(s,l,u(-n,-n,-n));const r=b();if(c(r,l,u(n,n,n)),o&&this._verifyArray(o,16)){const v=o;I(x,s,v),L(s,x),I(x,r,v),L(r,x)}$(s,E,0,s,g.WGS84,0,1),$(r,E,0,r,g.WGS84,0,1);const e=b(),y=b();M(e,s,r),S(y,s,r),this.fullExtent=new w({xmin:e[0],ymin:e[1],zmin:e[2],xmax:y[0],ymax:y[1],zmax:y[2],spatialReference:this.spatialReference})}else if(i.box&&this._verifyArray(i.box,12)){const t=i.box,l=u(t[0],t[1],t[2]),n=u(t[3],t[4],t[5]),s=u(t[6],t[7],t[8]),r=u(t[9],t[10],t[11]),e=[];for(let h=0;h<8;++h)e.push(b());if(c(e[0],l,n),c(e[0],e[0],s),c(e[0],e[0],r),m(e[1],l,n),c(e[1],e[1],s),c(e[1],e[1],r),c(e[2],l,n),m(e[2],e[2],s),c(e[2],e[2],r),m(e[3],l,n),m(e[3],e[3],s),c(e[3],e[3],r),c(e[4],l,n),c(e[4],e[4],s),m(e[4],e[4],r),m(e[5],l,n),c(e[5],e[5],s),m(e[5],e[5],r),c(e[6],l,n),m(e[6],e[6],s),m(e[6],e[6],r),m(e[7],l,n),m(e[7],e[7],s),m(e[7],e[7],r),o&&this._verifyArray(o,16)){const h=o;for(let _=0;_<8;++_)I(e[_],e[_],h)}const y=u(Number.MIN_VALUE,Number.MIN_VALUE,Number.MIN_VALUE),v=u(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);for(let h=0;h<8;++h)$(e[h],E,0,e[h],g.WGS84,0,1),M(v,v,e[h]),S(y,y,e[h]);this.fullExtent=new w({xmin:v[0],ymin:v[1],zmin:v[2],xmax:y[0],ymax:y[1],zmax:y[2],spatialReference:this.spatialReference})}}async load(a){return this.addResolvingPromise(this._doLoad(a)),this}async _doLoad(a){const i=a!=null?a.signal:null;try{await this.loadFromPortal({supportedTypes:["3DTiles Service"],validateItem:o=>{if(o.typeKeywords?.includes("IntegratedMesh"))return!0;throw new B("portal:invalid-layer-item-type","Invalid layer item, expected '${expectedType}' ",{expectedType:"3DTiles Service containing IntegratedMesh"})}},a)}catch(o){T(o)}this.url&&await q(this.url,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:i}).then(x=>{this._initFullExtent(x.data)},x=>{T(x)})}async fetchAttributionData(){return this.load().then(()=>({}))}_validateElevationInfo(){const a=this.elevationInfo,i="Integrated mesh 3d tiles layers";N(D.getLogger(this),F(i,"absolute-height",a)),N(D.getLogger(this),G(i,a))}};d([f({type:["IntegratedMesh3DTilesLayer"]})],p.prototype,"operationalLayerType",void 0),d([f({type:g})],p.prototype,"spatialReference",void 0),d([f({type:w})],p.prototype,"fullExtent",void 0),d([f(K)],p.prototype,"elevationInfo",null),d([f({type:["show","hide"]})],p.prototype,"listMode",void 0),d([f(P)],p.prototype,"url",void 0),d([f({readOnly:!0})],p.prototype,"type",void 0),d([f({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],p.prototype,"path",void 0),d([f({type:Number,json:{origins:{"web-scene":{name:"layerDefinition.minScale",write:()=>{},read:()=>{}},"portal-item":{name:"layerDefinition.minScale",write:()=>{},read:()=>{}}}}})],p.prototype,"minScale",void 0),d([f({type:Number,json:{origins:{"web-scene":{name:"layerDefinition.maxScale",write:()=>{},read:()=>{}},"portal-item":{name:"layerDefinition.maxScale",write:()=>{},read:()=>{}}}}})],p.prototype,"maxScale",void 0),p=d([Y("esri.layers.IntegratedMesh3DTilesLayer")],p);const J=p;export{J as default};
