import{G as f,dQ as T,a9 as o,P as m,dR as r,dS as S,c$ as x,dT as E,dU as I,bv as A,dV as M,dW as L,dX as D,dY as P,W as b,cv as g,cU as F,dZ as $}from"./chunk-C4bXDfxA.js";import{s as y,c as w,y as _,e as U}from"./chunk-D_yTKJJf.js";import{n as R}from"./chunk-CJ3qRn-m.js";import{i as C}from"./chunk-Tn1w-mKj.js";import"./chunk--6mYOZ3I.js";var a;(function(e){e[e.API=1]="API",e[e.VerboseAPI=2]="VerboseAPI",e[e.Error=3]="Error"})(a||(a={}));const d=g(),V=g();let c=class extends C(R(F)){constructor(){super(...arguments),this._suspendedHandle=null,this._usedMemory=0,this._futureMemory=0,this.type="voxel-3d",this.slicePlaneEnabled=!1,this._wasmLayerId=-1,this.ignoresMemoryFactor=!0,this._dbgFlags=new Set}get baseUrl(){return this.layer.parsedUrl?.path??""}get wasmLayerId(){return this._wasmLayerId}initialize(){if(this._dbgFlags.add(a.Error),this.view.viewingMode!=="local")throw new y("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if(!this.view._stage.renderView.renderingContext.capabilities.colorBufferFloat?.textureFloat)throw new y("voxel:missing-color-buffer-float","Voxel layers require the WebGL2 extension EXT_color_buffer_float",{});const e=this.layer.spatialReference;if(!f(e,this.view.spatialReference))throw new y("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const s=this.layer.currentVariableId,i=this.layer.getVolume(s),l=this.layer.getVariable(s);if(i!=null&&l!=null){const h=i.dimensions[0],t=i.dimensions[1],u=i.zDimension;if(u>1){const v=i.dimensions[u],W=h.size*t.size*v.size;let p=1;switch(l.renderingFormat.type){case"Int16":case"UInt16":p=2;break;case"Int32":case"UInt32":case"Float32":p=4}this._futureMemory=p*W}}const n=T(this).then(h=>{this._wasmLayerId=h,this._suspendedHandle=o(()=>this.suspended,t=>{const u=r(this.view);u&&u.setEnabled(this,!t)},m),this.addHandles([o(()=>this.layer.renderMode,t=>this._pushRenderModeToWasm(t)),o(()=>this.layer.currentVariableId,t=>this._pushCurrentVariableIdToWasm(t)),o(()=>this.layer.getSections(),t=>this._pushSectionsToWasm(t)),o(()=>this.layer.getVariableStyles(),t=>this._pushVariableStylesToWasm(t)),o(()=>this.layer.getVolumeStyles(),t=>this._pushVolumeStylesToWasm(t)),o(()=>this.layer.enableDynamicSections,t=>this._pushEnableDynamicSectionsToWasm(t)),o(()=>this.layer.enableIsosurfaces,t=>this._pushEnableIsosurfacesToWasm(t)),o(()=>this.layer.enableSections,t=>this._pushEnableSectionsToWasm(t)),o(()=>this.layer.enableSlices,t=>this._pushEnableSlicesToWasm(t)),o(()=>this.slicePlaneEnabled,t=>this._pushAnalysisSliceToWasm(t,this.view.slicePlane)),o(()=>this.view.slicePlane,t=>this._pushAnalysisSliceToWasm(this.slicePlaneEnabled,t)),o(()=>this.layer.minScale,t=>this._onScaleUpdated(this.view.scale,t,this.layer.maxScale),m),o(()=>this.layer.maxScale,t=>this._onScaleUpdated(this.view.scale,this.layer.minScale,t),m),o(()=>this.view.scale,t=>this._onScaleUpdated(t,this.layer.minScale,this.layer.maxScale),m)])}).catch(h=>{if(S(this),this._wasmLayerId=-1,h===-1)throw new y("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(h===-2)throw new y("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})});this.addResolvingPromise(n)}destroy(){S(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null)}isUpdating(){const e=r(this.view);return!(this._wasmLayerId<0||e==null)&&e.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}get usedMemory(){return this._usedMemory}get unloadedMemory(){return this._futureMemory}get performanceInfo(){return new x(this.usedMemory)}whenGraphicBounds(e,s){const i=e.attributes["Voxel.WorldPosition"];if(i){const l=E(),n=JSON.parse(i);if(I(n,this.view.renderSpatialReference,V,this.view.spatialReference||A.WGS84))return M(l,V),Promise.resolve({boundingBox:l,screenSpaceObjects:[]})}return Promise.reject()}setUsedMemory(e){this._usedMemory=e,this._futureMemory=0}captureFrustum(){r(this.view)?.captureFrustum()}toggleFullVolumeExtentDraw(){r(this.view)?.toggleFullVolumeExtentDraw(this)}getLayerTimes(){return r(this.view)?.getLayerTimes(this)??[]}getCurrentLayerTimeIndex(){return r(this.view)?.getCurrentLayerTimeIndex(this)??0}_pushRenderModeToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushRenderModeToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setRenderMode(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushRenderModeToWasm() failed!")}_pushSectionsToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushSectionsToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setStaticSections(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushSectionsToWasm() failed!")}_pushCurrentVariableIdToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushCurrentVariableIdToWasm() called!, "+(s?"have WASM":"don't have WASM!!!")),s?.setCurrentVariable(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushCurrentVariableIdToWasm() failed!")}_pushVariableStylesToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushVariableStylesToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setVariableStyles(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushVariableStylesToWasm() failed!")}_accountForEnableSlices(e,s){const i=s??this.layer.enableSlices;for(let l=0;l<e.length;++l){const n=e[l];for(const h of n.slices)h.enabled=h.enabled&&i}}_pushVolumeStylesToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushVolumeStylesToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s&&(this._accountForEnableSlices(e,null),s.setVolumeStyles(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushVolumeStylesToWasm() failed!"))}_pushAnalysisSliceToWasm(e,s){const i=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushAnalysisSliceToWasm() called, "+(i?"have WASM":"don't have WASM!!!"));let l=!1;if(i){if(s){const n=s.origin;L(d,s.basis1,s.basis2),D(d,d),l=i.setAnalysisSlice(this,e,n,d)}else P(d,0,0,1),l=i.setAnalysisSlice(this,!1,d,d);l||this._dbg(a.Error,"VoxelLayerView3D._pushAnalysisSliceToWasm() failed!")}}_pushEnableDynamicSectionsToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setEnableDynamicSections(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() failed!")}_pushEnableSlicesToWasm(e){const s=r(this.view);if(this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushEnableSlicesToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s){const i=this.layer.getVolumeStyles();this._accountForEnableSlices(i,e),s.setVolumeStyles(this,i)||this._dbg(a.Error,"VoxelLayerView3D._pushEnableSlicesToWasm() failed!")}}_pushEnableIsosurfacesToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setEnableIsosurfaces(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() failed!")}_pushEnableSectionsToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushEnableSectionsToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setEnableSections(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushEnableSectionsToWasm() failed!")}_onScaleUpdated(e,s,i){const l=$(e,s,i),n=r(this.view);n&&n.setIsInScaleRange(this,l)}async whenGraphicAttributes(e,s){return e}_dbg(e,s){this._dbgFlags.has(e)&&(e===a.Error?w.getLogger(this).error(s):w.getLogger(this).warn(s))}};b([_()],c.prototype,"layer",void 0),b([_()],c.prototype,"baseUrl",null),b([_({type:Boolean})],c.prototype,"slicePlaneEnabled",void 0),c=b([U("esri.views.3d.layers.VoxelLayerView3D")],c);const O=c;export{O as default};
