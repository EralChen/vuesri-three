import{g8 as b,a9 as c,P as h,dh as E,g9 as F,ga as V,gb as $,W as o}from"./chunk-C4bXDfxA.js";import{S as C,k as p,y as r,e as D,K as A}from"./chunk-D_yTKJJf.js";import{o as I,a as P}from"./chunk-PgxA42x2.js";import{i as d,r as G,n as S}from"./chunk-BZj2Y8ch.js";import"./chunk--6mYOZ3I.js";import"./chunk-eH1s5K3L.js";import"./chunk-CXRAPKOW.js";let a=class extends C{get availability(){return 1}get updating(){return this.layerSource.updating}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d";if(!i||t.type==="subtype-group")return d();const n=async(s,l)=>(await A(e.whenLayerView(t),l)).elevationAlignPointsInFeatures(s,l);return d(i,{elevationInfo:t.elevationInfo,alignPointsInFeatures:n})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="subtype-group";return G(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource;return e!=null&&e.type==="3d"&&t.type!=="subtype-group"?S(this._symbologySnappingSupported,async(i,n)=>{const s=await e.whenLayerView(t);return p(n),s.queryForSymbologySnapping({candidates:i,spatialReference:e.spatialReference},n)}):S()}get _symbologySnappingSupported(){return this._layerView3D!=null&&this._layerView3D.symbologySnappingSupported}initialize(){const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="subtype-group"&&(e.whenLayerView(t).then(i=>this._layerView3D=i),this.addHandles([e.elevationProvider.on("elevation-change",({context:i})=>{const{elevationInfo:n}=t;b(i,n)&&this._snappingElevationAligner.notifyElevationSourceChange()}),c(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),h),c(()=>this._layerView3D!=null?this._layerView3D.processor?.renderer:null,()=>this._symbologySnappingFetcher.notifySymbologyChange(),h),E(()=>this._layerView3D?.layer,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())]))}constructor(e){super(e),this.view=null,this._layerView3D=null,this._memoizedMakeGetGroundElevation=F(I)}refresh(){}async fetchCandidates(e,t){const{layer:i}=this.layerSource,n=i.source;if(!n?.querySnapping)return[];const s=V(i),l=$(e,this.view?.type??"2d",s),v=await n.querySnapping(l,{signal:t});p(t);const g=e.coordinateHelper.spatialReference,y=await this._snappingElevationAligner.alignCandidates(v.candidates,g,t);p(t);const u=await this._symbologySnappingFetcher.fetch(y,t);p(t);const m=u.length===0?y:[...y,...u],w=this._snappingElevationFilter.filter(l,m),_=this._memoizedMakeGetGroundElevation(this.view,g);return w.map(f=>P(f,_))}};o([r({constructOnly:!0})],a.prototype,"layerSource",void 0),o([r({constructOnly:!0})],a.prototype,"view",void 0),o([r()],a.prototype,"_snappingElevationAligner",null),o([r()],a.prototype,"_snappingElevationFilter",null),o([r()],a.prototype,"_symbologySnappingFetcher",null),o([r()],a.prototype,"_layerView3D",void 0),o([r()],a.prototype,"_symbologySnappingSupported",null),a=o([D("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],a);export{a as FeatureCollectionSnappingSource};
