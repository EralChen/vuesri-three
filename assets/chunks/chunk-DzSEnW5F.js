import{bv as $,iO as O,iP as P,iQ as E,iR as q,iS as G,iT as U,iU as k,iV as A,cv as B,cE as H}from"./chunk-C4bXDfxA.js";import{k as D}from"./chunk-D_yTKJJf.js";async function Q(t,d,l,I,i){const{elevationProvider:p,renderCoordsHelper:r}=t,{elevationInfo:f}=d,{pointsInFeatures:b,spatialReference:u}=I,g=$.fromJSON(u),h=O(f,!0),y=await P(h,g,i);D(i);const c=[],e=new Set,s=new Set,a=new k,n=E(0,0,0,$.WGS84),o=new A,S=B();n.spatialReference=g;const j=t.elevationProvider.spatialReference??t.spatialReference;for(const{objectId:v,points:w}of b){const m=l(v);if(m==null){for(const R of w)c.push(R.z??0);e.add(v);continue}m.isDraped&&s.add(v);const z=m.graphic.geometry;a.setFromElevationInfo(q(z,f)),a.updateFeatureExpressionInfoContext(y,m.graphic,d);for(const{x:R,y:C,z:F}of w)n.x=R,n.y=C,n.z=F??0,await G(n,S,j,0,{signal:i}),U(S,p,a,r,o),c.push(o.z)}return{elevations:c,drapedObjectIds:s,failedObjectIds:e}}async function T(t,d,l){if(t==null||d.candidates.length===0)return x;const I=t.graphics3DGraphicsByObjectID??t.graphics3DGraphics,i=[],p=[],{renderer:r}=t,f=r!=null&&"arcadeRequired"in r&&r.arcadeRequired?H():null,b=async(e,{graphic:s,graphics3DSymbol:a})=>{const n=await f,o=await t.getRenderingInfoAsync(s,r,n,{signal:l});return o==null?[]:a.queryForSnapping(e,g,o,l)},{candidates:u,spatialReference:g}=d;for(let e=0;e<u.length;++e){const s=u[e],{objectId:a}=s,n=typeof a=="number"?I?.get(a):void 0;if(n==null)continue;const{graphics3DSymbol:o}=n;o.symbologySnappingSupported&&(i.push(b(s,n)),p.push(e))}if(i.length===0)return x;const h=await Promise.all(i);D(l);const y=[],c=[];for(let e=0;e<h.length;++e){const s=h[e],a=p[e];for(const n of s)y.push(n),c.push(a)}return{candidates:y,sourceCandidateIndices:c}}const x={candidates:[],sourceCandidateIndices:[]};export{Q as m,T as r};
